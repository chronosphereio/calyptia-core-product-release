name: Get versions of products
# Intended to be called by other repositories to provide output versions.
on:
    workflow_call:
        inputs:
            ref:
                type: string
                default: main
                required: false
                description: The Github ref to check out of the core-product-release repo
        outputs:
            cli-version:
                value: ${{ jobs.get-version.outputs.cli-version }}
            cloud-version:
                value: ${{ jobs.get-version.outputs.cloud-version }}
            cloud-e2e-version:
                value: ${{ jobs.get-version.outputs.cloud-e2e-version }}
            core-fluent-bit-version:
                value: ${{ jobs.get-version.outputs.core-fluent-bit-version }}
            core-version:
                value: ${{ jobs.get-version.outputs.core-version }}
            core-operator-version:
                value: ${{ jobs.get-version.outputs.core-operator-version }}
            configmap-reload-version:
                value: ${{ jobs.get-version.outputs.configmap-reload-version }}
            frontend-version:
                value: ${{ jobs.get-version.outputs.frontend-version }}
            lua-sandbox-version:
                value: ${{ jobs.get-version.outputs.lua-sandbox-version }}
            k8s-test-versions:
                value: ${{ jobs.get-version.outputs.k8s-test-versions }}
jobs:
    get-version:
        name: Get the core-product-release versions
        runs-on: ubuntu-latest
        permissions:
            # Public repo so no token required
            contents: none
        outputs:
            cli-version: ${{ steps.cli-version.outputs.version }}
            cloud-version: ${{ steps.cloud-version.outputs.version }}
            cloud-e2e-version: ${{ steps.cloud-e2e-version.outputs.version }}
            core-fluent-bit-version: ${{ steps.core-fluent-bit-version.outputs.version }}
            core-version: ${{ steps.core-version.outputs.version }}
            core-operator-version: ${{ steps.core-operator-version.outputs.version }}
            configmap-reload-version: ${{ steps.configmap-reload-version.outputs.version }}
            frontend-version: ${{ steps.frontend-version.outputs.version }}
            lua-sandbox-version: ${{ steps.lua-sandbox-version.outputs.version }}
            k8s-test-versions: ${{ steps.k8s-test-versions.outputs.version }}
        steps:
            - uses: actions/checkout@v4
              with:
                repository: calyptia/core-product-release
                ref: ${{ inputs.ref }}

            - name: Install dependencies
              run: |
                sudo apt-get update
                sudo apt-get install -y jq
              shell: bash

            - id: cli-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.cli component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: cloud-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.cloud component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: cloud-e2e-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.cloud_e2e component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: core-fluent-bit-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.core_fluent_bit component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: core-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.core component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: core-operator-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.core_operator component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: configmap-reload-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.configmap_reload component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: frontend-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.frontend component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: lua-sandbox-version
              continue-on-error: true
              run: |
                VERSION=$(jq -cr .versions.lua_sandbox component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash

            - id: k8s-test-versions
              run: |
                VERSION=$(jq -cr .k8s_kind_versions component-config.json)
                echo "$VERSION"
                echo "version=$VERSION" >> $GITHUB_OUTPUT
              shell: bash
