---
  name: Reusable workflow to run integration tests
  on:
    workflow_call:
      inputs:
        cli-version:
          type: string
          required: false
          default: latest
          description: Release version of the calyptia cli to use, with the `v` prefix (release rather than numeric version)
        cli-image:
          type: string
          required: false
          default: ''
          description: CLI image to use to extract a custom binary from, only use this for PRs or similar.
        cloud-image:
          type: string
          required: false
          default: ghcr.io/chronosphereio/calyptia-cloud:latest
          description: docker image of chronosphereio/calyptia-cloud
        core-operator-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator:latest
          description: docker image of calyptia/core-operator
        core-operator-from-cloud-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator/sync-from-cloud:latest
          description: docker image of calyptia/core-operator
        core-operator-to-cloud-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator/sync-to-cloud:latest
          description: docker image of calyptia/core-operator
        core-operator-crd-manifest:
          type: string
          required: false
          description: Optional name of artefact to download containing operator manifests. Must be uploaded prior to calling this workflow.
        frontend-image:
          type: string
          required: false
          default: ghcr.io/chronosphereio/calyptia-frontend:latest
          description: docker image of chronosphereio/calyptia-frontend
        lua-sandbox-image:
          type: string
          required: false
          default: ghcr.io/calyptia/cloud-lua-sandbox:latest
          description: docker image of calyptia/cloud-lua-sandbox
        ref:
          description: The commit, tag or branch of the cloud-e2e repository to checkout
          type: string
          required: false
          default: refs/heads/main
        cpr-ref:
          description: The commit, tag or branch of this repository to checkout
          type: string
          required: false
          default: refs/heads/main
        calyptia-tests:
          description: Path to tests to be executed
          type: string
          required: false
        runner:
          description: The runner to use for tests.
          type: string
          required: false
          default: ubuntu-latest-m
        k8s-distribution:
          description: The K8S distribution to use for tests.
          type: string
          # options:
          #   - 'kind'
          #   - 'vcluster'
          default: kind
          required: false
        gke-cluster-name:
          description: The GKE cluster to deploy vClusters.
          type: string
          required: false
          default: infra-cloud-mgt-cluster
        gke-cluster-zone:
          description: The GKE cluster zone to deploy vClusters.
          type: string
          required: false
          default: us-east1
        gke-cluster-project:
          description: The GKE cluster project to deploy vClusters.
          type: string
          required: false
          default: calyptia-infra
      secrets:
        registry-username:
          description: ci username to use for login into container registry
          required: true
        registry-password:
          description: ci password to use for login into container registry
          required: true
        aws-access-key-id:
          description: Deprecated - will be removed.
          required: false
        aws-secret-access-key:
          description: Deprecated - will be removed.
          required: false
        google-access-key:
          description: The GCP access key.
          required: true
        github-token:
          description: The Github token for checking out the code.
          required: false # TODO: switch over once done
  env:
    AWS_EC2_METADATA_DISABLED: true
    CALYPTIA_CLI_VERSION: ${{ inputs.cli-version }}
    CALYPTIA_CLI_IMAGE: ${{ inputs.cli-image }}
    CALYPTIA_CLOUD_IMAGE: ${{ inputs.cloud-image }}
    CALYPTIA_CORE_OPERATOR_IMAGE: ${{ inputs.core-operator-image }}
    CALYPTIA_CORE_OPERATOR_FROM_CLOUD_IMAGE: ${{ inputs.core-operator-from-cloud-image }}
    CALYPTIA_CORE_OPERATOR_TO_CLOUD_IMAGE: ${{ inputs.core-operator-to-cloud-image }}
    CALYPTIA_CORE_OPERATOR_CRD: ${{ (inputs.core-operator-crd-manifest != '' && 'override/crd.yaml') || '' }}
    GITHUB_TOKEN: ${{ secrets.github-token }}

  jobs:
    get-versions:
      # permissions:
      #   contents: read
      uses: ./.github/workflows/get-versions.yaml
      with:
        ref: ${{ inputs.cpr-ref }}

    run-integration-tests-linux:
      name: Linux e2e tests
      needs:
        - get-versions
      # permissions:
      #   # Needed for the debug SSH connection to Actuated
      #   id-token: write
      #   contents: read
      #   actions: read
      #   packages: read
      strategy:
        fail-fast: false
        matrix:
          # Be aware the KIND and K8S image versions may need to be compatible
          # https://github.com/kubernetes-sigs/kind/releases/tag/v0.20.0
          k8s-release: ${{ fromJSON(needs.get-versions.outputs.k8s-test-versions) }}
      runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
      steps:
        - name: Set up Actuated mirror
          if: contains(inputs.runner, 'actuated')
          uses: self-actuated/hub-mirror@master

        - uses: actions/checkout@v4
          with:
            repository: chronosphereio/calyptia-core-product-release
            path: core-product-release
            ref: ${{ inputs.cpr-ref }}

        - name: Checkout the e2e test code
          uses: actions/checkout@v4
          with:
            repository: chronosphereio/calyptia-cloud-e2e
            ref: ${{ inputs.ref }}
            # TODO: Swap over once everyone passing valid token
            # token: ${{ secrets.github-token }}
            token: ${{ secrets.registry-password }}
            path: cloud-e2e

        - name: Download crd manifest
          if: inputs.core-operator-crd-manifest != ''
          uses: actions/download-artifact@v4
          with:
            name: ${{ inputs.core-operator-crd-manifest }}
            path: cloud-e2e/override

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ secrets.registry-username }}
            password: ${{ secrets.registry-password }}

        - id: auth
          uses: google-github-actions/auth@v2
          with:
            credentials_json: ${{ secrets.google-access-key }}
            export_environment_variables: true
            create_credentials_file: true

        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v2

        - name: Set up vCluster name
          id: get-vcluster-name
          run: |
            vcluster_name=$(echo "${{ matrix.k8s-release }}-${{ github.run_id }}-${{ strategy.job-index }}" | tr '[:upper:]' '[:lower:]' | sed -e 's/[^a-z0-9-]/-/g' -e 's/^[^a-z]/a&/')
            echo "CALYPTIA_E2E_TEST_VCLUSTER_NAME=$vcluster_name"
            echo "CALYPTIA_E2E_TEST_VCLUSTER_NAME=$vcluster_name" >> "${GITHUB_OUTPUT}"
          shell: bash

        - name: Run tests
          timeout-minutes: 45
          run: |
            export CALYPTIA_E2E_TEST_REPO_DIR="$GITHUB_WORKSPACE/cloud-e2e"
            ./core-product-release/scripts/run-integration-tests.sh
          env:
            CALYPTIA_CI_ACTUATED: ${{ (contains(inputs.runner, 'actuated') && 'true') || '' }}
            CALYPTIA_E2E_TEST_PLATFORM: ${{ inputs.k8s-distribution }}
            CALYPTIA_E2E_TEST_SET: ${{ inputs.calyptia-tests }}
            CALYPTIA_E2E_TEST_REPO_DIR: cloud-e2e
            CALYPTIA_E2E_TEST_K8S_VERSION: ${{ matrix.k8s-release }}
            CALYPTIA_E2E_TEST_VCLUSTER_NAME: ${{ steps.get-vcluster-name.outputs.CALYPTIA_E2E_TEST_VCLUSTER_NAME }}
            CALYPTIA_E2E_TEST_GKE_CLUSTER_NAME: ${{ inputs.gke-cluster-name }}
            CALYPTIA_E2E_TEST_GKE_CLUSTER_ZONE: ${{ inputs.gke-cluster-zone }}
            CALYPTIA_E2E_TEST_GKE_CLUSTER_PROJECT: ${{ inputs.gke-cluster-project }}
            REGISTRY_SERVER: ghcr.io
            REGISTRY_USERNAME: ${{ secrets.registry-username }}
            REGISTRY_PASSWORD: ${{ secrets.registry-password }}
            TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}

    integration-tests-complete:
      needs:
        - run-integration-tests-linux
      # Do not rename as used as a required check
      name: Linux e2e tests complete
      runs-on: ubuntu-latest
      permissions: {}
      steps:
        - run: echo Complete
          shell: bash

