---
  name: Reusable workflow to run integration tests
  on:
    workflow_call:
      inputs:
        cli-version:
          type: string
          required: false
          default: latest
          description: release version of the calyptia cli to use.
        cli-image:
          type: string
          required: false
          default: ghcr.io/calyptia/cli:main
          description: Deprecated - will be removed.
        cloud-image:
          type: string
          required: false
          default: ghcr.io/calyptia/cloud:latest
          description: docker image of calyptia/cloud
        core-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core:main
          description: docker image of calyptia-core
        core-operator-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator:latest
          description: docker image of calyptia/core-operator
        core-operator-from-cloud-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator/sync-from-cloud:latest
          description: docker image of calyptia/core-operator
        core-operator-to-cloud-image:
          type: string
          required: false
          default: ghcr.io/calyptia/core-operator/sync-to-cloud:latest
          description: docker image of calyptia/core-operator
        core-operator-crd-manifest:
          type: string
          required: false
          description: Optional name of artefact to download containing operator manifests. Must be uploaded prior to calling this workflow.
        frontend-image:
          type: string
          required: false
          default: ghcr.io/calyptia/frontend:main
          description: docker image of calyptia/frontend
        lua-sandbox-image:
          type: string
          required: false
          default: ghcr.io/calyptia/cloud-lua-sandbox:latest
          description: docker image of calyptia/cloud-lua-sandbox
        fluentd-version:
          type: string
          required: false
          default: v1.2-debian
          description: fluentd image version to use from fluent/fluentd dockerhub.
        ref:
          description: The commit, tag or branch of this repository to checkout
          type: string
          required: false
          default: refs/heads/main
        calyptia-tests:
          description: Path to tests to be executed
          type: string
          required: false
        runner:
          description: The runner to use for tests.
          type: string
          required: false
          default: actuated-4cpu-16gb
      secrets:
        registry-username:
          description: ci username to use for login into container registry
          required: true
        registry-password:
          description: ci password to use for login into container registry
          required: true
        aws-access-key-id:
          description: Deprecated - will be removed.
          required: false
        aws-secret-access-key:
          description: Deprecated - will be removed.
          required: false
        google-access-key:
          description: The GCP access key.
          required: true
        github-token:
          description: The Github token for checking out the code.
          required: false # TODO: switch over once done
  jobs:
    run-integration-tests:
      # permissions:
      #   # Needed for the debug SSH connection to Actuated
      #   id-token: write
      #   contents: read
      #   actions: read
      #   packages: read
      strategy:
        fail-fast: false
        matrix:
          # Be aware the KIND and K8S image versions may need to be compatible
          # https://github.com/kubernetes-sigs/kind/releases/tag/v0.20.0
          k8s-release:
            - 'v1.27.3'
            - 'v1.25.11'
            - 'v1.23.17'
      runs-on: ${{ inputs.runner || 'ubuntu-latest' }}
      env:
        AWS_EC2_METADATA_DISABLED: true
        FLUENTD_VERSION: ${{ inputs.fluentd-version }}
        CALYPTIA_CLI_VERSION: ${{ inputs.cli-version }}
        CALYPTIA_CLOUD_IMAGE: ${{ inputs.cloud-image }}
        CALYPTIA_CORE_IMAGE: ${{ inputs.core-image }}
        CALYPTIA_CORE_OPERATOR_IMAGE: ${{ inputs.core-operator-image }}
        CALYPTIA_CORE_OPERATOR_FROM_CLOUD_IMAGE: ${{ inputs.core-operator-from-cloud-image }}
        CALYPTIA_CORE_OPERATOR_TO_CLOUD_IMAGE: ${{ inputs.core-operator-to-cloud-image }}
        CALYPTIA_CORE_OPERATOR_CRD: ${{ (inputs.core-operator-crd-manifest != '' && 'override/crd.yaml') || '' }}
      steps:
        - name: Install dependencies
          run: |
            sudo apt-get update
            sudo apt-get install -y netcat lsof parallel httpie jq time bc python3 python-is-python3 coreutils
          shell: bash

        - name: Set up Actuated mirror
          if: contains(inputs.runner, 'actuated')
          uses: self-actuated/hub-mirror@master

        # - name: Prep SSH access just in case
        #   # https://github.com/mxschmitt/action-tmate#detached-mode
        #   uses: mxschmitt/action-tmate@v3
        #   with:
        #     detached: true

        - name: Checkout the Code
          uses: actions/checkout@v4
          with:
            repository: calyptia/cloud-e2e
            ref: ${{ inputs.ref }}
            # TODO: Swap over once everyone passing valid token
            # token: ${{ secrets.github-token }}
            token: ${{ secrets.registry-password }}

        - name: Verify selected tests exist
          if: inputs.calyptia-tests != ''
          run: |
            if [[ -d "./bats/${{ inputs.calyptia-tests }}" ]]; then
              echo "Found test set: ${{ inputs.calyptia-tests }}"
            else
              echo "Unable to find test set: ${{ inputs.calyptia-tests }}"
              exit 1
            fi
          shell: bash

        - name: Download crd manifest
          if: inputs.core-operator-crd-manifest != ''
          uses: actions/download-artifact@v3
          with:
            name: ${{ inputs.core-operator-crd-manifest }}
            path: override

        - name: Log in to the Container registry
          uses: docker/login-action@v3
          with:
            registry: ghcr.io
            username: ${{ secrets.registry-username }}
            password: ${{ secrets.registry-password }}

        - name: Create k8s Kind Cluster
          if: ${{ ! contains(inputs.runner, 'actuated') }}
          uses: helm/kind-action@v1.8.0
          timeout-minutes: 5
          with:
            node_image: kindest/node:${{ matrix.k8s-release }}
            cluster_name: kind
            wait: 300s

        - name: Install KIND
          if: contains(inputs.runner, 'actuated')
          uses: helm/kind-action@v1.8.0
          with:
            install_only: true

        - name: Create KIND cluster using Actuated mirror
          if: contains(inputs.runner, 'actuated')
          timeout-minutes: 5
          run: |
            kind create cluster --wait 300s --config /dev/stdin <<EOF
            kind: Cluster
            apiVersion: kind.x-k8s.io/v1alpha4
            nodes:
              - role: control-plane
                image: kindest/node:${{ matrix.k8s-release }}
            containerdConfigPatches:
              - |-
                [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
                  endpoint = ["http://192.168.128.1:5000"]
            EOF
          shell: bash

        - id: auth
          uses: google-github-actions/auth@v1
          with:
            credentials_json: ${{ secrets.google-access-key }}
            export_environment_variables: true
            create_credentials_file: true

        - name: Setup BATS
          uses: mig4/setup-bats@v1
          with:
            bats-version: 1.10.0

        - name: Deploy log forwarding to stdout for FB container
          run: |
            /bin/bash ./helpers/setup-log-forwarding.bash
          shell: bash

        - run: |
            docker pull $CALYPTIA_CLOUD_IMAGE
            kind load docker-image $CALYPTIA_CLOUD_IMAGE
          shell: bash

        - run: |
            docker pull $CALYPTIA_CORE_IMAGE
            kind load docker-image $CALYPTIA_CORE_IMAGE
          shell: bash

        - run: |
            docker pull $CALYPTIA_CORE_OPERATOR_IMAGE
            kind load docker-image $CALYPTIA_CORE_OPERATOR_IMAGE
          shell: bash

        - run: |
            docker pull $CALYPTIA_CORE_OPERATOR_TO_CLOUD_IMAGE
            kind load docker-image $CALYPTIA_CORE_OPERATOR_TO_CLOUD_IMAGE
          shell: bash

        - run: |
            docker pull $CALYPTIA_CORE_OPERATOR_FROM_CLOUD_IMAGE
            kind load docker-image $CALYPTIA_CORE_OPERATOR_FROM_CLOUD_IMAGE
          shell: bash

        - name: Set up Cloud SDK
          uses: google-github-actions/setup-gcloud@v1

        - name: Run bats tests
          run: |
            ./run-bats.sh ${{ inputs.calyptia-tests }}
          shell: bash
          timeout-minutes: 30
          env:
            REGISTRY_SERVER: ghcr.io
            REGISTRY_USERNAME: ${{ secrets.registry-username }}
            REGISTRY_PASSWORD: ${{ secrets.registry-password }}
            TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}

        - name: Dump pod logs
          if: always()
          continue-on-error: true
          run: |
            ps afx
            echo '-------------------------------------------------------------------------------'
            kubectl cluster-info || true
            echo '-------------------------------------------------------------------------------'
            kubectl get ns || true
            echo '-------------------------------------------------------------------------------'
            kubectl get pods --all-namespaces || true
            echo '-------------------------------------------------------------------------------'
            kubectl describe all -n test || true
            echo '-------------------------------------------------------------------------------'
            kubectl get pods --all-namespaces -o wide --show-labels || true
            export POD_NAME=$(kubectl get pods -l "app.kubernetes.io/name=fluent-bit,app.kubernetes.io/instance=fluent-bit" -o jsonpath="{.items[0].metadata.name}")
            kubectl logs $POD_NAME
            echo '-------------------------------------------------------------------------------'
            wget https://raw.githubusercontent.com/johanhaleby/kubetail/master/kubetail
            /bin/bash ./kubetail --follow false --previous false --colored-output false --namespace test || true
            echo '-------------------------------------------------------------------------------'
          shell: bash

        - name: list images in cluster
          # Useful to ensure we grab everything
          continue-on-error: true
          if: always()
          # https://kubernetes.io/docs/tasks/access-application-cluster/list-all-running-container-images/
          run: |
            docker images
            echo '-------------------------------------------------------------------------------'
            kubectl get pods --all-namespaces -o jsonpath="{.items[*].spec.containers[*].image}" |\
              tr -s '[[:space:]]' '\n' |\
              sort |\
              uniq -c
            echo '-------------------------------------------------------------------------------'
          shell: bash
