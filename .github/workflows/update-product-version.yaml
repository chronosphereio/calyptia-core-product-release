name: Update specific product version
on:
    workflow_call:
        inputs:
            product:
                description: The JSON key for the product to update.
                required: true
                type: string
            version:
                description: The numeric (no v- prefix) version to update to.
                required: true
                type: string
        secrets:
            token:
                required: true
                description: The Github token to use for check out.
jobs:
    version-update:
        name: Update ${{ inputs.product }} to ${{ inputs.version }}
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
              with:
                token: ${{ secrets.token }}
                repository: calyptia/core-product-release
            - run: |
                jq '.versions.${{ inputs.product }} = "${{ inputs.version }}"' ./component-config.json | tee ./component-config-new.json
                mv -f ./component-config-new.json ./component-config.json
              shell: bash

            - name: Generate PR - runs all the tests
              id: cpr
              uses: peter-evans/create-pull-request@v5
              with:
                commit-message: 'ci: update to latest versions'
                signoff: true
                # Repeated calls will sit on top of each other to test as one until merged
                branch: ci_update_versions_push
                delete-branch: true
                title: 'ci: update to latest Calyptia versions'
                # We need workflows permission so have to use the CI_PAT
                token: ${{ secrets.token }}
                labels: ci,automerge
                body: |
                  Update Calyptia versions
                  - ${{ inputs.product }} = "${{ inputs.version }}"

                  Github info:
                  - Created by ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                  - Auto-generated by create-pull-request: https://github.com/peter-evans/create-pull-request
                draft: false
                team-reviewers: backend

            - name: Check outputs
              if: ${{ steps.cpr.outputs.pull-request-number }}
              run: |
                echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
                echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
              shell: bash

            - name: Enable Pull Request Automerge
              if: ${{ steps.cpr.outputs.pull-request-number }}
              run: gh pr merge --squash --auto "${{ steps.cpr.outputs.pull-request-number }}"
              env:
                GH_TOKEN: ${{ secrets.token }}
