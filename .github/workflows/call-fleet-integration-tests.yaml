---
  name: Reusable workflow to run integration tests
  on:
    workflow_call:
      inputs:
        calyptia-cli-version:
          type: string
          required: false
          default: 1.11.0
          description: release version of the calyptia cli to use.
        calyptia-lts-version:
          type: string
          required: true
          description: release version of calyptia fluent-bit lts to use.
        ref:
          description: The commit, tag or branch of this repository to checkout
          type: string
          required: false
          default: refs/heads/main
        calyptia-tests:
          description: Path to tests to be executed
          type: string
          required: false
        runner:
          description: The runner to use for tests.
          type: string
          required: false
          default: actuated-4cpu-16gb
        calyptia-lts-repo:
          description: URL with calyptia fluent-bit lts packages
          type: string
          required: false
          default: https://calyptia-lts-staging-standard.s3.amazonaws.com
      secrets:
        github-token:
          description: The Github token for checking out the code.
          required: false # TODO: switch over once done
  env:
    CALYPTIA_CLI_VERSION: ${{ inputs.calyptia-cli-version }}

  jobs:
    verify-inputs:
      name: Verify inputs
      runs-on: ubuntu-latest
      permissions: {}
      steps:
        - name: Success
          run: echo "Checks complete"
          shell: bash

    setup-bats:
      runs-on: ${{ inputs.runner }}
      steps:
        - name: Setup BATS
          uses: mig4/setup-bats@v1
          with:
            bats-version: 1.10.0

    run-integration-tests-windows:
      if: contains(inputs.runner, 'windows')
      runs-on: ${{ inputs.runner }}
      needs:
        - setup-bats
        - verify-inputs
      steps:
        # missing: lsof, parallel, bc
        - name: Install dependencies
          run: |
            choco install netcat httpie
          shell: bash
        - name: Download and Install Calyptia Fluent-Bit LTS Package
          id: pkginstall
          shell: bash
          run: |
            URL="${{ inputs.calyptia-lts-repo }}/windows"
            URL="${URL}/${{ inputs.calyptia-lts-version }}"
            URL="${URL}/calyptia-fluent-bit-${{ inputs.calyptia-lts-version }}-win64.zip"
            curl "${URL}" --output calyptia-fluent-bit-win64.zip
            unzip calyptia-fluent-bit-win64.zip -d /tmp
            mv /tmp/calyptia-fluent-bit-* /tmp/calyptia-fluent-bit
            echo "bin=/tmp/calyptia-fluent-bit/bin/calyptia-fluent-bit" >> "${GITHUB_OUTPUT}"
        - name: Install Calyptia CLI
          id: calyptia-cli
          shell: bash
          run: |
            URL="https://github.com/calyptia/cli/releases/download"
            URL="${URL}/v${{ inputs.calyptia-cli-version }}"
            URL="${URL}/cli_${{ inputs.calyptia-cli-version }}_windows_amd64.tar.gz"
            echo "Calyptia CLI URL: ${URL}"
            curl "${URL}" --output /tmp/calyptia-cli.tar.gz
            mkdir -p /tmp/calyptia-cli/
            tar zxvf /tmp/calyptia-cli.tar.gz -C /tmp/calyptia-cli/
            echo "path=/tmp/calyptia-cli" >> "${GITHUB_OUTPUT}"
        - name: Checkout the Code
          uses: actions/checkout@v4
          with:
            repository: calyptia/cloud-e2e
            ref: ${{ inputs.ref }}
            token: ${{ secrets.github-token }}
        - name: Checkout the Code for the Mock Server
          uses: actions/checkout@v4
          with:
            repository: calyptia/fleet-mock-api
            # must also be updated when the initial version is accepted.
            ref: initial-version
            path: fleet-mock-api
            token: ${{ secrets.github-token }}
        - name: Run bats tests
          run: |
            export CALYPTIA_CLOUD_URL=http://127.0.0.1:8080
            export CALYPTIA_CLOUD_TOKEN=eyJQcm9qZWN0SUQiOiJmb29iYXIifQ.faketoken
            (cd fleet-mock-api;
              go run main.go > /dev/null &
              echo $! > ../MOCK.PID
            )
            export PATH="${PATH}":${{ steps.calyptia-cli.outputs.bin }}
            ./run-bats.sh ${{ inputs.calyptia-tests }}
            kill -9 "$(cat MOCK.PID)"
          shell: bash
          timeout-minutes: 30
          env:
            TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}
            FLUENTBIT_BIN: ${{ steps.pkginstall.outputs.bin }}

    run-integration-tests-macos:
      if: contains(inputs.runner, 'macos')
      runs-on: ${{ inputs.runner }}
      needs:
        - setup-bats
        - verify-inputs
      steps:
        - name: Install dependencies
          run: |
            # missing: time (reserved shell keyword)
            # brew update
            brew install netcat lsof parallel httpie bc coreutils
          shell: bash
        - name: Set Architecture Package according to runner
          id: pkgarch
          run: |
            echo -n "Runner architecture: "
            uname -m
            if [ "$(uname -m)" == "arm64" ]; then
              echo "brand=apple" >> "${GITHUB_OUTPUT}"
              echo "arch=arm64" >> "${GITHUB_OUTPUT}"
            else
              echo "brand=intel" >> "${GITHUB_OUTPUT}"
              echo "arch=amd64" >> "${GITHUB_OUTPUT}"
            fi
        - name: Download and Install Calyptia Fluent-Bit LTS Package
          id: pkginstall
          shell: bash
          run: |
            URL="${{ inputs.calyptia-lts-repo }}/macos"
            URL="${URL}/${{ inputs.calyptia-lts-version }}"
            URL="${URL}/calyptia-fluent-bit-${{ inputs.calyptia-lts-version }}-${{ steps.pkgarch.outputs.brand }}.pkg"
            wget "${URL}" -O calyptia-fluent-bit.pkg
            installer -pkg calyptia-fluent-bit.pkg -target CurrentUserHomeDirectory
            # pkgutil --lsbom io.fluentbit.calyptia-fluent-bit.binary --volume $HOME
            echo "bin=${HOME}/./usr/local/bin/calyptia-fluent-bit" >> "${GITHUB_OUTPUT}"
        - name: Install Calyptia CLI
          id: calyptia-cli
          shell: bash
          run: |
            URL="https://github.com/calyptia/cli/releases/download"
            URL="${URL}/v${{ inputs.calyptia-cli-version }}"
            URL="${URL}/cli_${{ inputs.calyptia-cli-version }}_darwin"
            URL="${URL}_${{ steps.pkgarch.outputs.arch }}.tar.gz"
            curl "${URL}" --output /tmp/calyptia-cli.tar.gz
            echo "Calyptia CLI URL: ${URL}"
            mkdir -p /tmp/calyptia-cli/
            tar zxvf /tmp/calyptia-cli.tar.gz -C /tmp/calyptia-cli/
            echo "path=/tmp/calyptia-cli" >> "${GITHUB_OUTPUT}"
        - name: Checkout the Code
          uses: actions/checkout@v4
          with:
            repository: calyptia/cloud-e2e
            ref: ${{ inputs.ref }}
            token: ${{ secrets.github-token }}
        - name: Checkout the Code for the Mock Server
          uses: actions/checkout@v4
          with:
            repository: calyptia/fleet-mock-api
            # must also be updated when the initial version is accepted.
            ref: initial-version
            path: fleet-mock-api
            token: ${{ secrets.github-token }}
        - name: Run bats tests
          shell: bash
          run: |
            export CALYPTIA_CLOUD_URL=http://127.0.0.1:8080
            export CALYPTIA_CLOUD_TOKEN=eyJQcm9qZWN0SUQiOiJmb29iYXIifQ.faketoken
            (cd fleet-mock-api;
              go run main.go > /dev/null &
              echo $! > ../MOCK.PID
            )
            export PATH="${PATH}":${{ steps.calyptia-cli.outputs.bin }}
            ./run-bats.sh ${{ inputs.calyptia-tests }}
            kill -9 "$(cat MOCK.PID)"
          # shell: bash
          timeout-minutes: 30
          env:
            TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}
            FLUENTBIT_BIN: ${{ steps.pkginstall.outputs.bin }}
