---
name: Reusable workflow to run integration tests
on:
  workflow_call:
    inputs:
      calyptia-cli-version:
        type: string
        required: false
        default: latest
        description: release version of the calyptia cli to use, with the v prefix
      calyptia-package-artefact:
        type: string
        required: false
        description: package artefact for calyptia fluent-bit
        default: ""
      ref:
        description: The commit, tag or branch of this repository to checkout
        type: string
        required: false
        default: refs/heads/main
      calyptia-tests:
        description: Path to tests to be executed
        type: string
        required: false
      runner:
        description: The runner to use for tests.
        type: string
        required: false
        default: actuated-4cpu-16gb
      calyptia-lts-repo:
        description: URL with calyptia fluent-bit lts packages
        type: string
        required: false
        default: https://calyptia-lts-staging-standard.s3.amazonaws.com
      calyptia-lts-version:
        description: The version of Calyptia Fluent Bit to take from the repo.
        type: string
        required: false
        default: ""
      calyptia-cloud-url:
        description: The cloud URL to use
        type: string
        required: true
    secrets:
      calyptia-cloud-token:
        description: |
          The token used to authenticate to the cloud instance used for
          testing.
        required: true
      github-token:
        description: The Github token for checking out the code.
        required: true
env:
  CALYPTIA_CLI_VERSION: ${{ inputs.calyptia-cli-version }}
  CALYPTIA_CLOUD_URL: ${{ inputs.calyptia-cloud-url }}
  CALYPTIA_CLOUD_TOKEN: ${{ secrets.calyptia-cloud-token }}
  GITHUB_TOKEN: ${{ secrets.github-token }}

jobs:
  verify-inputs:
    name: Verify inputs
    runs-on: ubuntu-latest
    permissions: {}
    steps:
      - name: Fail if missing version and package
        if: inputs.calyptia-lts-version == '' && inputs.calyptia-package-artefact == ''
        run: exit 1
        shell: bash

      - name: Success
        run: echo "Checks complete"
        shell: bash

  run-integration-tests-windows:
    if: contains(inputs.runner, 'windows')
    runs-on: ${{ inputs.runner }}
    needs:
      - verify-inputs
    steps:
      # missing: lsof, parallel, bc
      - name: Install dependencies
        run: |
          choco install netcat httpie
        shell: bash

      - uses: azure/setup-kubectl@v3

      - name: Install Bats
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.10.0

      # TODO: install from LTS repo: https://github.com/marketplace/actions/engineerd-configurator

      - name: Download Fluent-Bit Binary from Artefact
        id: download
        if: ${{ inputs.calyptia-package-artefact }}
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.calyptia-package-artefact }}
          path: /tmp/fluent-bit

      - name: Transform Download Path to MSYS2
        if: ${{ inputs.calyptia-package-artefact }}
        shell: bash
        # transform download-path into msys2 equivalent
        run: |
            DP="${{ steps.download.outputs.download-path }}"
            DP=$(echo $DP | sed 's/\([A-Za-z]\)\:/\l\1/' | sed 's/\\/\//g')
            DP="${DP}"
            mv "${DP}/"*.zip /tmp/calyptia-fluent-bit.zip

      - name: Unzip Calyptia Package
        if: ${{ inputs.calyptia-package-artefact }}
        shell: bash
        id: pkginstall
        run: |
          unzip /tmp/calyptia-fluent-bit.zip -d /tmp
          mv /tmp/calyptia-fluent-bit-* /tmp/calyptia-fluent-bit
          echo "bin=/tmp/calyptia-fluent-bit/bin/calyptia-fluent-bit" >> "${GITHUB_OUTPUT}"

      - name: Install CLI
        uses: engineerd/configurator@v0.0.10
        with:
          name: calyptia
          version: ${{ inputs.calyptia-cli-version }}
          fromGitHubReleases: true
          includePrereleases: false
          repo: calyptia/cli
          token: ${{ secrets.github-token }}
          urlTemplate: https://github.com/calyptia/cli/releases/download/{{ version }}/cli_{{ rawVersion }}_windows_amd64.tar.gz
          pathInArchive: calyptia

      - name: Checkout the Code
        uses: actions/checkout@v4
        with:
          repository: calyptia/cloud-e2e
          ref: ${{ inputs.ref }}
          token: ${{ secrets.github-token }}

      - name: Run bats tests
        run: |
          ./run-bats.sh ${{ inputs.calyptia-tests }}
        shell: bash
        timeout-minutes: 30
        env:
          TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}
          FLUENTBIT_BIN: /tmp/calyptia-fluent-bit/bin/calyptia-fluent-bit

  run-integration-tests-macos:
    if: contains(inputs.runner, 'macos')
    runs-on: ${{ inputs.runner }}
    needs:
      - verify-inputs
    steps:
      - name: Install dependencies
        run: |
          # missing: time (reserved shell keyword)
          # brew update
          brew install netcat lsof parallel httpie bc coreutils
        shell: bash
      - uses: azure/setup-kubectl@v3
      - name: Install Bats
        uses: mig4/setup-bats@v1
        with:
          bats-version: 1.10.0
      - name: Set Architecture Package according to runner
        id: pkgarch
        run: |
          echo -n "Runner architecture: "
          uname -m
          if [ "$(uname -m)" == "arm64" ]; then
            echo "brand=apple" >> "${GITHUB_OUTPUT}"
            echo "arch=arm64" >> "${GITHUB_OUTPUT}"
          else
            echo "brand=intel" >> "${GITHUB_OUTPUT}"
            echo "arch=amd64" >> "${GITHUB_OUTPUT}"
          fi
      # TODO: add package usage
      - name: Download and Install Calyptia Fluent-Bit LTS Package
        id: pkginstall
        if: inputs.calyptia-lts-version != ''
        shell: bash
        run: |
          URL="${{ inputs.calyptia-lts-repo }}/macos"
          URL="${URL}/${{ inputs.calyptia-lts-version }}"
          URL="${URL}/calyptia-fluent-bit-${{ inputs.calyptia-lts-version }}-${{ steps.pkgarch.outputs.brand }}.pkg"
          wget "${URL}" -O calyptia-fluent-bit.pkg
          installer -pkg calyptia-fluent-bit.pkg -target CurrentUserHomeDirectory
          # pkgutil --lsbom io.fluentbit.calyptia-fluent-bit.binary --volume $HOME
          echo "bin=${HOME}/./usr/local/bin/calyptia-fluent-bit" >> "${GITHUB_OUTPUT}"

      - name: Install CLI
        uses: engineerd/configurator@v0.0.10
        with:
          name: calyptia
          version: ${{ inputs.calyptia-cli-version }}
          fromGitHubReleases: true
          includePrereleases: false
          repo: calyptia/cli
          token: ${{ secrets.github-token }}
          urlTemplate: https://github.com/calyptia/cli/releases/download/v{{ version }}/cli_{{ rawVersion }}_darwin_${{ steps.pkgarch.outputs.arch }}.tar.gz
          pathInArchive: calyptia

      - name: Checkout the Code
        uses: actions/checkout@v4
        with:
          repository: calyptia/cloud-e2e
          ref: ${{ inputs.ref }}
          token: ${{ secrets.github-token }}
      - name: Run bats tests
        shell: bash
        run: |
          ./run-bats.sh ${{ inputs.calyptia-tests }}
        timeout-minutes: 30
        env:
          TEST_UID: ${{ github.repository }}-${{ github.run_id }}-${{ strategy.job-index }}
          FLUENTBIT_BIN: ${{ steps.pkginstall.outputs.bin }}
