name: Release
on:
    workflow_dispatch:
    push:
        tags:
            - 'v*'
jobs:
    ci-get-metadata:
        uses: ./.github/workflows/get-versions.yaml
        with:
            ref: ${{ github.ref }}

    ci-generate-reports:
      name: Generate SBOM and CVE reports for release
      uses: ./.github/workflows/call-generate-reports.yaml
      with:
          ref: ${{ github.ref }}
      secrets:
        registry-username: ${{ secrets.CI_USERNAME }}
        registry-password: ${{ secrets.CI_PAT }}
        github-token: ${{ secrets.CI_PAT }}

    ci-release:
        name: Create official release
        runs-on: ubuntu-latest
        needs:
            - ci-get-metadata
            - ci-generate-reports
        permissions:
            contents: write
        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Download reports
          uses: actions/download-artifact@v3
          with:
            name: ${{ needs.ci-generate-reports.outputs.artefact-name }}
            path: reports/

        - name: Create release for tag
          uses: softprops/action-gh-release@v1
          with:
            body: |
              Release of Calyptia Core ${{ github.ref_name }}:
                - CLI: ${{ needs.ci-get-metadata.outputs.cli-version }}
                - Cloud: ${{ needs.ci-get-metadata.outputs.cloud-version }}
                - Core: ${{ needs.ci-get-metadata.outputs.core-version }}
                - Core Fluent Bit: ${{ needs.ci-get-metadata.outputs.core-fluent-bit-version }}
                - Core Operator: ${{ needs.ci-get-metadata.outputs.core-operator-version }}
                - Frontend: ${{ needs.ci-get-metadata.outputs.frontend-version }}
                - LUA Sandbox: ${{ needs.ci-get-metadata.outputs.lua-sandbox-version }}
            fail_on_unmatched_files: false
            files: |
                *.json
                reports/*.json
            generate_release_notes: false

    ci-update-self-hosted:
        name: Update self-hosted chart to use matching versions
        # We cannot invoke a reusable workflow on the private repo so have to assume some coupling here.
        # uses: calyptia/chart-cloud-standalone/.github/workflows/call-update-release-versions.yaml
        runs-on: ubuntu-latest
        needs:
            - ci-get-metadata
        permissions:
            contents: read
            # Not required as we use CI_PAT directly so we can trigger workflows
            # pull-requests: write
        steps:
        - uses: actions/checkout@v4
          with:
            repository: calyptia/chart-cloud-standalone
            token: ${{ secrets.CI_PAT }}

        # This is the heavy lifter and where any updates/coupling are present
        - run: ./scripts/update-versions.sh
          shell: bash
          env:
            CHART_VERSION: ${{ github.ref_name }}
            CLI_VERSION: ${{ needs.ci-get-metadata.outputs.cli-version }}
            CLOUD_VERSION: ${{ needs.ci-get-metadata.outputs.cloud-version }}
            CORE_FB_VERSION: ${{ needs.ci-get-metadata.outputs.core-fluent-bit-version }}
            CORE_VERSION: ${{ needs.ci-get-metadata.outputs.core-version }}
            FRONTEND_VERSION: ${{ needs.ci-get-metadata.outputs.frontend-version }}
            LUASANDBOX_VERSION: ${{ needs.ci-get-metadata.outputs.lua-sandbox-version }}
            CORE_OPERATOR_VERSION: ${{ needs.ci-get-metadata.outputs.core-operator-version }}
            HOT_RELOAD_VERSION: ${{ needs.ci-get-metadata.outputs.configmap-reload-version }}

        - name: Generate PR
          id: cpr
          uses: peter-evans/create-pull-request@v5
          with:
            commit-message: 'ci: update for release ${{ github.ref_name }}'
            signoff: true
            delete-branch: true
            title: 'ci: update for release ${{ github.ref_name }}'
            # We need workflows permission so have to use the CI_PAT
            token: ${{ secrets.CI_PAT }}
            labels: ci,automerge,trigger-full-test
            body: |
                Update Calyptia product versions from Core Product Release ${{ github.ref_name }}

                - Created by ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - Auto-generated by create-pull-request: https://github.com/peter-evans/create-pull-request
            draft: false

        - name: Check outputs
          if: ${{ steps.cpr.outputs.pull-request-number }}
          run: |
            echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
            echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
          shell: bash

        - name: Enable Pull Request Automerge
          continue-on-error: true
          if: ${{ steps.cpr.outputs.pull-request-number }}
          run: gh pr merge --squash --auto "${{ steps.cpr.outputs.pull-request-number }}"
          env:
            GH_TOKEN: ${{ secrets.CI_PAT }}

    ci-update-docs:
        name: Update Core Docs with new version
        runs-on: ubuntu-latest
        permissions:
            contents: none
        steps:
        - name: Determine major version value from tag
          id: get-branch
          run: |
            if [[ "$TAG" =~ ^v?([0-9]+\.[0-9]+).*$ ]]; then
                echo "branch=${BASH_REMATCH[1]}"
                echo "branch=${BASH_REMATCH[1]}" >> $GITHUB_OUTPUT
            else
                echo "Invalid tag: $TAG"
                exit 1
            fi
          shell: bash
          env:
            TAG: ${{ github.ref_name }}

        - name: Checkout core docs repo
          uses: actions/checkout@v4
          with:
            repository: calyptia/core-docs
            token: ${{ secrets.CI_PAT }}

        - name: Create or checkout branch
          run: (git show-branch "$BRANCH" &>/dev/null) && (git checkout "$BRANCH") || (git checkout -b "$BRANCH")
          shell: bash
          env:
            BRANCH: ${{ steps.get-branch.outputs.branch }}

        - name: Inject latest version
          run: echo "${{ github.ref_name }}" > ./latest-tag.txt

        - name: Download reports
          uses: actions/download-artifact@v3
          with:
            name: ${{ needs.ci-generate-reports.outputs.artefact-name }}
            path: reports/

        - name: Update any versions
          run: |
            if [[ -x ./scripts/update-version.sh ]]; then
                echo "Updating versions to $NEW_VERSION"
                ./scripts/update-version.sh "$NEW_VERSION"
            else
                echo "Skipping as no executable ./scripts/update-version.sh found"
            fi
          shell: bash
          env:
            NEW_VERSION: ${{ github.ref_name }}
            REPORTS_DIR: reports

        - name: Generate PR
          id: cpr
          uses: peter-evans/create-pull-request@v5
          with:
            commit-message: 'ci: update for release ${{ github.ref_name }}'
            signoff: true
            delete-branch: true
            title: 'ci: update for release ${{ github.ref_name }}'
            # We need workflows permission so have to use the CI_PAT
            token: ${{ secrets.CI_PAT }}
            # labels: ci,automerge,trigger-full-test
            body: |
                Update Calyptia product versions from Core Product Release ${{ github.ref_name }}

                - Created by ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
                - Auto-generated by create-pull-request: https://github.com/peter-evans/create-pull-request
            draft: false

        - name: Check outputs
          if: ${{ steps.cpr.outputs.pull-request-number }}
          run: |
            echo "Pull Request Number - ${{ steps.cpr.outputs.pull-request-number }}"
            echo "Pull Request URL - ${{ steps.cpr.outputs.pull-request-url }}"
          shell: bash

        - name: Enable Pull Request Automerge
          continue-on-error: true
          if: ${{ steps.cpr.outputs.pull-request-number }}
          run: gh pr merge --squash --auto "${{ steps.cpr.outputs.pull-request-number }}"
          env:
            GH_TOKEN: ${{ secrets.CI_PAT }}
