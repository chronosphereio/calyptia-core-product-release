name: Create a test self-hosted stack
on:
    workflow_dispatch:
jobs:
    create-vm:
        name: Create VM
        uses: ./.github/workflows/call-create-self-hosted-stack.yaml
        secrets:
            token: ${{ secrets.CI_PAT }}
            gcp-credentials: ${{ secrets.GCP_PLAYGROUND_SA }}

    run-api-tests:
        name: Run API tests against cloud API server
        runs-on: ubuntu-latest
        needs:
            - create-vm
        permissions:
            contents: read
        steps:
            - uses: actions/checkout@v4
              with:
                repository: chronosphereio/calyptia-api

            - name: API schema tests
              run: |
                  ./scripts/run-tests.sh --endpoint "[^(?:^/v1/verification_email)]"
              shell: bash
              timeout-minutes: 20
              env:
                CLOUD_URL: ${{ needs.create-vm.outputs.calyptia-cloud-url }}
                TOKEN: ${{ needs.create-vm.outputs.calyptia-cloud-token }}

    create-test-instance:
        name: Create a test instance on the new stack
        runs-on: ubuntu-latest
        needs:
            - create-vm
        permissions:
            contents: read
        env:
            VM_NAME: ${{ needs.create-vm.outputs.calyptia-cloud-vm-name }}
            CALYPTIA_CLOUD_URL: ${{ needs.create-vm.outputs.calyptia-cloud-url }}
            CALYPTIA_CLOUD_TOKEN: ${{ needs.create-vm.outputs.calyptia-cloud-token }}
        steps:
            - uses: actions/checkout@v4

            - name: Hit the Cloud API endpoint
              run: curl -sSfL "${CALYPTIA_CLOUD_URL}"
              shell: bash

            - name: Set up KIND locally to run instance on
              uses: helm/kind-action@v1.9.0
              timeout-minutes: 5

            - name: Deploy instance in local cluster
              timeout-minutes: 5
              run: |
                helm repo add calyptia https://helm.calyptia.com --force-update
                helm repo update
                helm upgrade --install core-instance calyptia/core-instance \
                    --set cloudToken="${CALYPTIA_CLOUD_TOKEN}" \
                    --set cloudUrl="${CALYPTIA_CLOUD_URL}" \
                    --set coreInstance=test \
                    --debug --wait
              shell: bash

            - uses: ./.github/actions/debug-cluster/
              if: always()

    delete-vm:
        if: always()
        needs:
            - create-vm
            - create-test-instance
            - run-api-tests
        name: Clean up stack
        uses: ./.github/workflows/call-delete-self-hosted-stack.yaml
        with:
            calyptia-cloud-vm-name: ${{ needs.create-vm.outputs.calyptia-cloud-vm-name }}
        secrets:
            gcp-credentials: ${{ secrets.GCP_PLAYGROUND_SA }}
